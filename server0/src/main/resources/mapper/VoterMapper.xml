<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace一般定义为 包名+文件名 -->
<mapper namespace="com.example.server0.mapper.VoterMapper">
    <resultMap id="VoterMap" type="com.example.server0.model.Voter">
        <id column="VoterId" jdbcType="INTEGER" property="VoterId" javaType="java.lang.Integer"/>
        <result column="VoterName" jdbcType="VARCHAR" property="VoterName" javaType="java.lang.String"/>
        <result column="password" jdbcType="VARCHAR" property="password" javaType="java.lang.String"/>
        <result column="VoterType" jdbcType="VARCHAR" property="VoterType" javaType="java.lang.String"/>
    </resultMap>

    <!-- id是自定义的名称，通常使用的通俗的命名办法，比如selectById代表基于主键id值，查询一条唯一的记录  -->
    <!-- #{id} 代表预处理任务，反之SQL注入攻击  这里需要取到一个传递过来的id值(动态处理) -->
    <select id="selectByVoter" resultMap="VoterMap">
        select VoterId, VoterName, password,VoterType
        from votingsystem.voter
        where VoterId=#{voter.VoterId} and VoterName=#{voter.VoterName} and password=#{voter.password} and VoterType=#{voter.VoterType}
    </select>

    <select id="login" resultMap="VoterMap">
        select VoterId, VoterName, password,VoterType
        from votingsystem.voter
        where VoterName=#{voter.VoterName} and password=#{voter.password}
    </select>

    <!-- 查询数据库中总共有多少条记录 -->
    <select id="selectVoterCount" resultType="java.lang.Integer">
        select
        count(VoterId)
        from
        votingsystem.voter
        <where>
            <if test="VoterName != null and VoterName != ''">
                VoterName like "%"#{VoterName}"%"
            </if>
            <if test="VoterType != null and VoterType != ''">
                and VoterType like "%"#{VoterType}"%"
            </if>
        </where>
    </select>

    <!-- 基于下标和分页值，进行分页查询 -->
    <!--             where-->
    <!--                 username like '%'#{username}'%' and age=#{age}-->
    <select id="selectByVoterPage" resultMap="VoterMap">
        select
        VoterId, VoterName, password, VoterType
        from
        votingsystem.voter
        <where>
            <if test="VoterName != null and VoterName != ''">
                VoterName like "%"#{VoterName}"%"
            </if>
            <if test="VoterType != null and VoterType != ''">
                and VoterType like "%"#{VoterType}"%"
            </if>
        </where>
        limit
        #{index},#{limit}
    </select>

    <!--
    数据库返回数据会有三种标准形态
    1. 没有找到匹配数据，返回空的内容
    2. 找到一条数据，返回单行内容
    3. 找到多条数据，返回多行内容
    -->
    <!--    <insert id="insert">-->
    <!--    <update id=""></update>-->
    <!--    <delete id=""></delete>-->
    <!--
    select id, username, password from dzkd2023.user where username='dk001' and password='qweqwewqewqeewq' or 1=1 or username=admin limit 1

    -->
    <insert id="insertVoter">
        insert into votingsystem.voter(VoterName, password, VoterType) values(#{voter.VoterName}, #{voter.password}, #{voter.VoterType})
    </insert>

    <delete id="deleteByVoterId">
        delete from votingsystem.voter where VoterId=#{VoterId}
    </delete>

    <update id="updateVoterType">
        update votingsystem.voter set VoterType=#{VoterType} where VoterId=#{VoterId};
    </update>
</mapper>