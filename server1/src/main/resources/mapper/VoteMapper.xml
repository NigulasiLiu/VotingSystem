<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace一般定义为 包名+文件名 -->
<mapper namespace="com.example.server1.mapper.VoteMapper">
    <resultMap id="VoteMap" type="com.example.server1.model.Vote">
        <id column="voteId" jdbcType="INTEGER" property="voteId" javaType="java.lang.Integer"/>
        <result column="voteName" jdbcType="VARCHAR" property="voteName" javaType="java.lang.String"/>
        <result column="voteResult" jdbcType="VARCHAR" property="voteResult" javaType="java.lang.String"/>
        <result column="voteType" jdbcType="VARCHAR" property="voteType" javaType="java.lang.String"/>
        <result column="voteDdl" jdbcType="DATE" property="voteDdl" javaType="java.sql.Timestamp"/>
    </resultMap>

    <!-- id是自定义的名称，通常使用的通俗的命名办法，比如selectById代表基于主键id值，查询一条唯一的记录  -->
    <!-- #{id} 代表预处理任务，反之SQL注入攻击  这里需要取到一个传递过来的id值(动态处理) -->
    <select id="selectByVote" resultMap="VoteMap">
        select voteId, voteName, voteResult,voteType
        from votingsystem.vote
        where voteId=#{vote.voteId} and voteName=#{vote.voteName} and voteResult=#{vote.voteResult} and voteType=#{vote.voteType}
    </select>

    <!-- 基于下标和分页值，进行分页查询 -->
    <!--             where-->
    <!--                 username like '%'#{username}'%' and age=#{age}-->
    <select id="selectByVotePage" resultMap="VoteMap">
        select
        voteId, voteName, voteResult, voteType, voteDdl
        from
        votingsystem.voter
        <where>
            <if test="voteName != null and voteName != ''">
                voteName like "%"#{voteName}"%"
            </if>
            <if test="voteResult != null and voteResult != ''">
                and voteResult like "%"#{voteResult}"%"
            </if>
            <if test="voteType != null and voteType != ''">
                and voteType like "%"#{voteType}"%"
            </if>
        </where>
        limit
        #{index},#{limit}
    </select>

    <!--
    数据库返回数据会有三种标准形态
    1. 没有找到匹配数据，返回空的内容
    2. 找到一条数据，返回单行内容
    3. 找到多条数据，返回多行内容
    -->
    <!--    <insert id="insert">-->
    <!--    <update id=""></update>-->
    <!--    <delete id=""></delete>-->
    <!--
    select id, username, password from dzkd2023.user where username='dk001' and password='qweqwewqewqeewq' or 1=1 or username=admin limit 1

    -->
    <insert id="insertVote">
        insert into votingsystem.vote(voteName, voteResult, voteType, voteDdl) values(#{vote.voterName}, #{vote.voteResult}, #{vote.voteType}, #{vote.voteDdl}
    </insert>

    <delete id="deleteByVoteId">
        delete from votingsystem.vote where voteId=#{voteId}
    </delete>

    <update id="updateVoteTypeAndVoteDdlAndVoteResult">
        update votingsystem.vote set voteType=#{voterType}, voteDdl=#{voteDdl}, voteResult=#{voteResult} where voteId=#{voteId};
    </update>
</mapper>